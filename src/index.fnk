{describe: jest_describe, it: jest_it} = import '@jest/globals'
{expect: jest_expect} = import '@jest/globals'


skip = dict:
  it: fn ...args:
    jest_it.skip ...args

  describe: fn descr, tests:
    jest_describe.skip descr, fn:
      tests()
      undefined


only = dict:
  it: fn ...args:
    jest_it.only ...args

  describe: fn descr, tests:
    jest_describe.only descr, fn:
      tests()
      undefined


describe = fn descr, tests:
  jest_describe descr, fn:
    tests()
    undefined


it = fn descr, test, timeout:
  jest_it descr, test, timeout


any = jest_expect.any


mock_fn = jest.fn

mock = jest.mock


to_equal = fn expected: fn expect_actual:
  expect_actual.toEqual expected

to_not_equal = fn expected: fn expect_actual:
  expect_actual.not.toEqual expected


to_match_snapshot = fn expect_actual:
  expect_actual.toMatchSnapshot()


was_called = fn expect_actual:
  expect_actual.toBeCalled()

was_not_called = fn expect_actual:
  expect_actual.not.toBeCalled()


was_called_with = fn ...expected: fn expect_actual:
  expect_actual.toHaveBeenCalledWith ...expected

was_not_called_with = fn ...expected: fn expect_actual:
  expect_actual.not.toHaveBeenCalledWith ...expected


to_throw = fn expected: fn expect_actual:
  expect_actual.toThrow expected

to_not_throw = fn expected: fn expect_actual:
  expect_actual.not.toThrow expected


expect = fn actual, expectation:
  expectation jest_expect actual
