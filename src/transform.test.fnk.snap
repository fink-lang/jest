// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`process compiles fink 1`] = `
Object {
  "code": "const foo = 1234 || spam;
exports.foo = foo;",
  "map": Object {
    "mappings": "AAAA,MAAA,GAAG,GAAG,QAAN,IAAA;QAAA,G,GAAA,G",
    "names": Array [],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "foo = 1234 or spam",
    ],
    "version": 3,
  },
}
`;

exports[`process compiles fink with cov 1`] = `
Object {
  "code": "/* istanbul ignore next */
function cov_2ozalsxixv() {
  var path = \\"/temp/src/foobar.fnk\\";
  var hash = \\"1041f008da8ccd7b75e9eb63abff72f84a5bb4b3\\";
  var global = new Function(\\"return this\\")();
  var gcv = \\"__coverage__\\";
  var coverageData = {
    path: \\"/temp/src/foobar.fnk\\",
    statementMap: {
      \\"0\\": {
        start: {
          line: 1,
          column: 12
        },
        end: {
          line: 1,
          column: 24
        }
      },
      \\"1\\": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 18
        }
      }
    },
    fnMap: {},
    branchMap: {
      \\"0\\": {
        loc: {
          start: {
            line: 1,
            column: 12
          },
          end: {
            line: 1,
            column: 24
          }
        },
        type: \\"binary-expr\\",
        locations: [{
          start: {
            line: 1,
            column: 12
          },
          end: {
            line: 1,
            column: 16
          }
        }, {
          start: {
            line: 1,
            column: 20
          },
          end: {
            line: 1,
            column: 24
          }
        }],
        line: 1
      }
    },
    s: {
      \\"0\\": 0,
      \\"1\\": 0
    },
    f: {},
    b: {
      \\"0\\": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: [\\"/temp/src/foobar.fnk\\"],
      names: [\\"foo\\", \\"spam\\"],
      mappings: \\"AAAA,MAAAA,GAAG,GAAG,QAAQC,IAAd;QAAAD,G,GAAAA,G\\",
      sourcesContent: [\\"foo = 1234 or spam\\"]
    },
    _coverageSchema: \\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\",
    hash: \\"1041f008da8ccd7b75e9eb63abff72f84a5bb4b3\\"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ozalsxixv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_2ozalsxixv();
const foo =
/* istanbul ignore next */
(cov_2ozalsxixv().s[0]++,
/* istanbul ignore next */
(cov_2ozalsxixv().b[0][0]++, 1234) ||
/* istanbul ignore next */
(cov_2ozalsxixv().b[0][1]++, spam));

/* istanbul ignore next */
cov_2ozalsxixv().s[1]++;
exports.foo = foo;",
  "map": Object {
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,GAAG;AAAA;AAAA;AAAG;AAAA;AAAA;AAAA,6BAAN,IAAM,CAAH,CAAH;;;;QAAA,G,GAAA,G",
    "names": Array [],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "foo = 1234 or spam",
    ],
    "version": 3,
  },
}
`;

exports[`process ignores transforming mock not imported 1`] = `
Object {
  "code": "const {
  mock
} = spam(\`ni\`);
mock(\`not a jest mock\`);",
  "map": Object {
    "mappings": "AAAA,MAAA;AAAC,EAAA;AAAD,IAASA,IAAI,CAAb,IAAa,CAAb;AAEAC,IAAI,CAAJA,iBAAI,CAAJA",
    "names": Array [
      "spam",
      "mock",
    ],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "{mock} = spam 'ni'

mock 'not a jest mock'
",
    ],
    "version": 3,
  },
}
`;

exports[`process ignores transforming mock not imported from @fink/jest 1`] = `
Object {
  "code": "const {
  mock,
  require_actual
} = require(\\"./foobar.fnk\\");

mock(\`not a jest mock\`);
require_actual(\`not a module\`);",
  "map": Object {
    "mappings": ";AAACA,EAAAA,I;AAAMC,EAAAA;YAAyB,c;;AAEhCD,IAAI,CAAJA,iBAAI,CAAJA;AACAC,cAAc,CAAdA,cAAc,CAAdA",
    "names": Array [
      "mock",
      "require_actual",
    ],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "{mock, require_actual} = import './foobar.fnk'

mock 'not a jest mock'
require_actual 'not a module'
",
    ],
    "version": 3,
  },
}
`;

exports[`process transforms mock imported from @fink/jest as jest.mock 1`] = `
Object {
  "code": "const {
  it,
  mock,
  mock_fn,
  require_actual
} = require(\\"@fink/jest/test.js\\");

/* istanbul ignore next */
jest.mock(\`./transform.fnk\`, () => ({
  foobar: mock_fn(),
  shrub:
  /* istanbul ignore next */
  jest.requireActual(\`./transform\`)
}));

const foo = (mock) => mock(\`not jest.mock\`);

exports.foo = foo;",
  "map": Object {
    "mappings": ";AAACA,EAAAA,E;AAAIC,EAAAA,I;AAAMC,EAAAA,O;AAASC,EAAAA;YAAyB,oB;;AAE7CF;AAAAA,UAAI,iBAAJA,EAAwB,OAAI;AAC1B,EAAA,MAAA,EAAQC,OADkB,EAAA;AAE1B,EAAA,KAAA;AAAOC;AAAAA,qBAAc,aAAdA;AAFmB,CAAJ,CAAxBF;;AAIA,MAAA,GAAG,GAAMA,CAAAA,IAAH,KACJA,IAAI,CADN,eACM,CADN;;QAAA,G,GAAA,G",
    "names": Array [
      "it",
      "mock",
      "mock_fn",
      "require_actual",
    ],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "{it, mock, mock_fn, require_actual} = import '@fink/jest/test.fnk'

mock './transform.fnk', fn: rec:
  foobar: mock_fn _
  shrub: require_actual './transform'

foo = fn mock:
  mock 'not jest.mock'
",
    ],
    "version": 3,
  },
}
`;

exports[`process transforms renamed imports from @fink/jest as jest.mock 1`] = `
Object {
  "code": "const {
  it,
  mock: mock_mod,
  mock_fn,
  require_actual: imp_real_mod
} = require(\\"@fink/jest/test.js\\");

/* istanbul ignore next */
jest.mock(\`./transform.fnk\`, () => ({
  foobar: mock_fn(),
  shrub:
  /* istanbul ignore next */
  jest.requireActual(\`./transform\`)
}));

const foo = (mock) => mock(\`not jest.mock\`);

exports.foo = foo;",
  "map": Object {
    "mappings": ";AAACA,EAAAA,E;AAAIC,EAAAA,I,EAAMC,Q;AAAUC,EAAAA,O;AAASC,EAAAA,c,EAAgBC;YAAuB,oB;;AAErEH;AAAAA,UAAQ,iBAARA,EAA4B,OAAI;AAC9B,EAAA,MAAA,EAAQC,OADsB,EAAA;AAE9B,EAAA,KAAA;AAAOE;AAAAA,qBAAY,aAAZA;AAFuB,CAAJ,CAA5BH;;AAIA,MAAA,GAAG,GAAMD,CAAAA,IAAH,KACJA,IAAI,CADN,eACM,CADN;;QAAA,G,GAAA,G",
    "names": Array [
      "it",
      "mock",
      "mock_mod",
      "mock_fn",
      "require_actual",
      "imp_real_mod",
    ],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "{it, mock: mock_mod, mock_fn, require_actual: imp_real_mod} = import '@fink/jest/test.fnk'

mock_mod './transform.fnk', fn: rec:
  foobar: mock_fn _
  shrub: imp_real_mod './transform'

foo = fn mock:
  mock 'not jest.mock'
",
    ],
    "version": 3,
  },
}
`;
