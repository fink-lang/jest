// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`process compiles fink 1`] = `
Object {
  "code": "const foo = 1234 || spam;
Object.assign(module.exports, {
  foo
});",
  "map": Object {
    "mappings": "MAAA,G,GAAM,QAAQ,I",
    "names": Array [],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "foo = 1234 || spam",
    ],
    "version": 3,
  },
}
`;

exports[`process compiles fink with cov 1`] = `
Object {
  "code": "/* istanbul ignore next */
function cov_2ozalsxixv() {
  var path = \\"/temp/src/foobar.fnk\\";
  var hash = \\"9b37ab2f5ed5771a783d53c97e2b758cf69e54cd\\";
  var global = new Function(\\"return this\\")();
  var gcv = \\"__coverage__\\";
  var coverageData = {
    path: \\"/temp/src/foobar.fnk\\",
    statementMap: {
      \\"0\\": {
        start: {
          line: 1,
          column: 12
        },
        end: {
          line: 1,
          column: 24
        }
      },
      \\"1\\": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      }
    },
    fnMap: {},
    branchMap: {
      \\"0\\": {
        loc: {
          start: {
            line: 1,
            column: 12
          },
          end: {
            line: 1,
            column: 24
          }
        },
        type: \\"binary-expr\\",
        locations: [{
          start: {
            line: 1,
            column: 12
          },
          end: {
            line: 1,
            column: 16
          }
        }, {
          start: {
            line: 1,
            column: 20
          },
          end: {
            line: 1,
            column: 24
          }
        }],
        line: 1
      }
    },
    s: {
      \\"0\\": 0,
      \\"1\\": 0
    },
    f: {},
    b: {
      \\"0\\": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: [\\"/temp/src/foobar.fnk\\"],
      names: [],
      mappings: \\"MAAA,G,GAAM,QAAQ,I\\",
      sourcesContent: [\\"foo = 1234 || spam\\"]
    },
    _coverageSchema: \\"1a1c01bbd47fc00a2c39e90264f33305004495a9\\",
    hash: \\"9b37ab2f5ed5771a783d53c97e2b758cf69e54cd\\"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];

  cov_2ozalsxixv = function () {
    return actualCoverage;
  };

  return actualCoverage;
}

cov_2ozalsxixv();
const foo =
/* istanbul ignore next */
(cov_2ozalsxixv().s[0]++,
/* istanbul ignore next */
(cov_2ozalsxixv().b[0][0]++, 1234) ||
/* istanbul ignore next */
(cov_2ozalsxixv().b[0][1]++, spam));

/* istanbul ignore next */
cov_2ozalsxixv().s[1]++;
Object.assign(module.exports, {
  foo
});",
  "map": Object {
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAAA,G;;;AAAM;AAAA;AAAA;AAAA,6BAAQ,IAAR,C",
    "names": Array [],
    "sources": Array [
      "/temp/src/foobar.fnk",
    ],
    "sourcesContent": Array [
      "foo = 1234 || spam",
    ],
    "version": 3,
  },
}
`;
