{transformSync: babel_transform} = import '@babel/core'
{parse} = import '@fink/larix'
{generate} = import '@fink/loxia'
{set_props} = import '@fink/std-lib/obj'

babel_istanbul = import 'babel-plugin-istanbul'


istanbul_plugin = fn cwd, input_source_map:
  list:
    babel_istanbul
    dict:
      cwd
      include: ['**/*.fnk']
      extension: '.fnk'
      inputSourceMap: input_source_map


handle_error = fn obj_with_errors:
  match obj_with_errors:
    {errors: [{}]}:
      {errors: [{error, stack}]} = obj_with_errors

      err = new SyntaxError error
      set_props err, {stack: '${error}${stack}'}
      throw err
    else:
      obj_with_errors


transform = fn source, filename:
  ast = parse source, filename
  handle_error ast
  opts = dict:
    module_type: 'cjs'
    source_maps: true

  compiled = generate ast, filename, source, opts
  handle_error compiled


process = fn src, filename, {rootDir}, transform_opts:
  {code: js_code, source_map} = transform src, filename

  plugins = match transform_opts:
    {instrument: true}:
      [istanbul_plugin rootDir, source_map]
    else:
      []

  opts = dict:
    filename
    sourceMap: true,
    inputSourceMap: source_map
    auxiliaryCommentBefore: ' istanbul ignore next '
    plugins

  # TODO can we use transformFromAstSync with ast from loxia
  # TODO instead of having to reparse generated js
  babel_transform js_code, opts

